[global]
model_id = "pois_01"                                       
method = "parametric_prior"                                       
rep = 200     
seed = 123   


[design matrix]
dmatrix_function_call = "load_design_matrix_equality"
scaling = "standardize"                                           
select_obs = [1, 11, 27, 33, 17, 15] 


[model parameters]
name_param = ["beta_0", "beta_1", "beta_2", "beta_3"]   
true = [tfd.Normal(2.91, 0.07), tfd.Normal(0.23, 0.05), 
        tfd.Normal(-1.51, 0.135), tfd.Normal(-0.61, 0.105)]  
[model parameters parametric prior]
name_hyperparam = [("mu0", "sigma0"),("mu1", "sigma1"),
                   ("mu2", "sigma2"),("mu3", "sigma3")]           
family = [tfd.Normal, tfd.Normal, tfd.Normal, tfd.Normal]                                
initialization = [(tfd.Uniform(0.,1.), tfd.Uniform(0.,0.2)),
                  (tfd.Uniform(0.,1.), tfd.Uniform(0.,0.2)),
                  (tfd.Uniform(0.,-1.), tfd.Uniform(0.,0.2)),
                  (tfd.Uniform(0.,-1.), tfd.Uniform(0.,0.2))]

[target quantities and elicitation techniques]
target = ["ypred", "group_means"]                         
elicitation = ["histogram", "quantiles"] 
quantiles_specs =[None, (10, 20, 30, 40, 50, 60, 70, 80, 90)] 
custom_target_functions = [None, "custom_group_means"] 


[prior sampling specifications]
scale_prior_samples = [1,1,1,1]


[generative model]
model_name = "GenerativePoissonModel"
[generative model softmax gumbel]
upper_threshold = 80
[generative model additional input]
total_count = 80


[loss specification]
combine_loss = ["by-group", "by-group"]  


[training]
epochs = 200
init_learning_rate = 0.01
learning_rate_step = 7
learning_rate_percentage = 0.9
learning_rate_minimum = 0.000001


[saving settings]
save_results = True
save_to_path = "results/data/parametric_prior/"