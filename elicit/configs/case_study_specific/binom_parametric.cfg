[global]
model_id = "binom_01"                                       
method = "parametric_prior"                                      
seed = 123
rep = 300

[design matrix]
dmatrix_function_call = "load_design_matrix_haberman"
scaling = "standardize"                                           
select_obs = [0, 5, 10, 15, 20, 25, 30]  


[model parameters]
name_param = ["beta_0", "beta_1"]   
true = [tfd.Normal(-0.51, 0.06), tfd.Normal(0.26, 0.04)]  
[model parameters parametric prior]
name_hyperparam = [("mu0", "sigma0"),("mu1", "sigma1")]           
family = [tfd.Normal, tfd.Normal]                                
initialization = [(tfd.Uniform(0.,1.), tfd.Uniform(0.,0.5)), 
                  (tfd.Uniform(0.,1.), tfd.Uniform(0.,0.5))]   


[target quantities and elicitation techniques]
target = ["ypred"]                         
elicitation = ["quantiles"] 
quantiles_specs =[(10, 20, 30, 40, 50, 60, 70, 80, 90)]                                        


[generative model]
model_name = "GenerativeBinomialModel"
[generative model softmax gumbel]
upper_threshold = 31
[generative model additional input]
total_count = 31


[loss specification]
combine_loss = ["by-group"]  


[training]
epochs = 300
init_learning_rate = 0.01
learning_rate_step = 5
learning_rate_percentage = 0.7
learning_rate_minimum = 0.000001


[saving settings]
save_results = True
save_to_path = "results/data/parametric_prior/"